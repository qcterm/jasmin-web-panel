upstream smsgateway_portal_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:/opt/website.smsgateway/tmp/gunicorn.sock fail_timeout=0;
}

server {
                listen 80;
                listen [::]:80;

                server_name smsgateway-dev.3trunks.net;

                charset utf-8;

                client_max_body_size 5m;

                #允许跨域请求的域，*代表所有
                add_header 'Access-Control-Allow-Origin' *;
                #允许带上cookie请求
                add_header 'Access-Control-Allow-Credentials' 'true';
                #允许请求的方法，比如 GET/POST/PUT/DELETE
                add_header 'Access-Control-Allow-Methods' *;
                #允许请求的header
                add_header 'Access-Control-Allow-Headers' *;

                # SSL configuration
                #
                #listen 443 ssl;
                #listen [::]:443 ssl;

                #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则
                #error_page 404/404.html;
                #ssl_certificate    /opt/website/ssl/unipayment.pem;
                #ssl_certificate_key    /opt/website/ssl/unipayment.key;
                #ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
                #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
                #ssl_prefer_server_ciphers on;
                #ssl_session_cache shared:SSL:10m;
                #ssl_session_timeout 10m;
                #error_page 497  https://$host$request_uri;
                #SSL-END

        location / {
                # an HTTP header important enough to have its own Wikipedia entry:
                #   http://en.wikipedia.org/wiki/X-Forwarded-For
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                # enable this if and only if you use HTTPS, this helps Rack
                # set the proper protocol for doing redirects:
                # proxy_set_header X-Forwarded-Proto https;

                # pass the Host: header from the client right along so redirects
                # can be set properly within the Rack application
                proxy_set_header Host $http_host;

                # we don't want nginx trying to do something clever with
                # redirects, we set the Host: header above already.
                proxy_redirect off;

                # set "proxy_buffering off" *only* for Rainbows! when doing
                # Comet/long-poll stuff.  It's also safe to set if you're
                # using only serving fast clients with Unicorn + nginx.
                # Otherwise you _want_ nginx to buffer responses to slow
                # clients, really.
                # proxy_buffering off;

                # Try to serve static files from nginx, no point in making an
                # *application* server like Unicorn/Rainbows! serve static files.
                if (!-f $request_filename) {
                        proxy_pass http://smsgateway_portal_server;
                        break;
                }
        }

        location ^~ /static{
            alias  /opt/website.smsgateway/deploy/public;
        }

        location ^~ /media{
            alias  /opt/website.smsgateway/deploy/public;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
}
